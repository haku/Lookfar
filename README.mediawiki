= Lookfar =

A light-weight HTTP-based monitoring application.

= Install =

== Database schema ==

Postgresql is required.

<code>create table nodes (node VARCHAR(16), updated TIMESTAMP, pass VARCHAR(96));<br>
create table updates (node VARCHAR(16), updated TIMESTAMP, key VARCHAR(255), value VARCHAR(255), threshold VARCHAR(255), expire VARCHAR(255));</code>

= UI =

<code><nowiki>curl -u "user_name:shared_password" https://lookfar.herokuapp.com/text</nowiki></code>

= API =

== Nodes ==

List nodes:<br>
<code><nowiki>curl -u "user_name:shared_password" https://lookfar.herokuapp.com/node</nowiki></code>

Create a node or reset a node's password:<br>
<code><nowiki>curl -u "user_name:shared_password" -X PUT https://lookfar.herokuapp.com/node/exampleNode</nowiki></code>

Delete a node:<br>
<code><nowiki>curl -u "user_name:shared_password" -X DELETE https://lookfar.herokuapp.com/node/exampleNode</nowiki></code>

== Updates ==

=== Managing ===

List all updates:<br>
<code><nowiki>curl -u "user_name:shared_password" https://lookfar.herokuapp.com/update</nowiki></code>

Delete an update:<br>
<code><nowiki>curl -u "user_name:shared_password" -X DELETE https://lookfar.herokuapp.com/node/exampleNode/var1</nowiki></code>

=== Pushing ===

Write an update:<br>
<code><nowiki>curl -u "exampleNode:node_password" -d "var1=123&var2=456" https://lookfar.herokuapp.com/update/exampleNode</nowiki></code>

== Expire periods ==

Default expire period is 1d.  Set custom expire times using strings like <code>1m</code>, <code>2h</code>, <code>3d</code>.

=== Setting ===

Set a custom period:<br>
<code><nowiki>curl -u "user_name:shared_password" -d "1h" https://lookfar.herokuapp.com/node/exampleNode/var1/expire</nowiki></code>

Clear a custom period (reverts to default):<br>
<code><nowiki>curl -u "user_name:shared_password" -X DELETE https://lookfar.herokuapp.com/node/exampleNode/var1/expire</nowiki></code>

== Thresholds ==

A rule is what the value should be.  Breaking the rule triggers a warning.

=== Syntax ===

{|
!rule
!description
|-
|<code>==0</code>
|Treat value as a string and must equal a string.
|-
|<code><45<br>>45<br><=45<br>>=45</code>
|Treat value as a number and compare to a number.
|-
|<code><nowiki>=~[0 ]</nowiki></code>
|Treat value as a string and must match a regular expression.
|}

=== Setting ===

Set a threshold:<br>
<code><nowiki>curl -u "user_name:shared_password" -d "==0" https://lookfar.herokuapp.com/node/exampleNode/var1/threshold</nowiki></code>

Clear a threshold:<br>
<code><nowiki>curl -u "user_name:shared_password" -X DELETE https://lookfar.herokuapp.com/node/exampleNode/var1/threshold</nowiki></code>

== Summary of context paths ==

<pre>
A = Admin
U = User
N = Node
+ = Not implemented

  U    GET /
+ A    GET /user
+ A    GET /user/<userName>
+ A    PUT /user/<userName>
+ A DELETE /user/<userName>
+ U   POST /password
  U    GET /node
  U    GET /node/<nodeName>
  U    PUT /node/<nodeName>
  U DELETE /node/<nodeName>
  U    GET /node/<nodeName>/<keyName>
  U DELETE /node/<nodeName>/<keyName>
  U    GET /node/<nodeName>/<keyName>/expire
  U   POST /node/<nodeName>/<keyName>/expire
  U DELETE /node/<nodeName>/<keyName>/expire
  U    GET /node/<nodeName>/<keyName>/threshold
  U   POST /node/<nodeName>/<keyName>/threshold
  U DELETE /node/<nodeName>/<keyName>/threshold
  U    GET /update
  N   POST /update/<nodeName>
</pre>
